extern. vector_new ⇒.(: Int)
extern. vector_push ⇒.(Int Int : *¡)
extern. vector_len ⇒.(Int : Int)
extern. vector_get ⇒.(Int Int : Int)

fun. list→vector(∈.(a List(Int)))
    let. v vector_new()
    for‡ a λ. x: vector_push(v x)
    v

fun. vector→list(∈.(v Int))
    let. mut, a list¡
    for_ι(vector_len(v) λ.(i: push(~!a vector_get(v i))))
    a

extern. utf8_decode ⇒.(Int : Int)
extern. utf8_encode ⇒.(Int : Int)

fun. print_string(∈.(s List(Int)))
    for(vector→list(utf8_encode(list→vector(s))) print_byte)
    print_byte(#\n)

fun. ∀, T: debug(∈.(name List(Int)) ∈.(f ⇒.(: T)))
    print_string(++("DEBUG: Entering " name))
    let. r f()
    print_string(++("DEBUG: Exiting " name))
    r
