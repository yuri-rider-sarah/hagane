extern. file_contents ‡(Int : Int)
extern. llvm_init ‡(: #())
extern. llvm_fin ‡(: #())

let. argv map_ι[List(Int)](-(get_argc() 1) λ.(i 'Int map_ι[Int](get_argv_len(+(i 1)) λ.(j 'Int get_argv_byte(+(i 1) j)))))

let. files map[List(Int) #(List(Int) List(Int))](argv λ.(filename 'List(Int)
    #(filename vector→list(utf8_decode(file_contents(list→vector(filename)))))
))
let. mut, lexer lexer(files)
let. mut, u_statements empty[U_Statement]
while.
    match. read_token(lexer)
    .#(_ Eof() _) ⊥
    ._ ⊤
do,
    let. #(lexer′ r_expr) read_block_expr(lexer)
    set. lexer lexer′
    let. u_statement r_expr→u_statement(r_expr)
    set. u_statements push[U_Statement](u_statements u_statement)
let. i_statements u_statements→i_statements(u_statements empty_i_context new_type_var() FilePos(get[List(Int)](argv 0) 1 1))
let. t_statements i_statements→t_statements(i_statements empty_t_context)
llvm_init()
codegen_statements(t_statements get_empty_c_context())
llvm_fin()
